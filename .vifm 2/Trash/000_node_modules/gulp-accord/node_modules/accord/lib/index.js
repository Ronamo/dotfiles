// Generated by CoffeeScript 1.7.0
(function() {
  var W, abstract_mapper, adapter_to_name, glob, name_to_adapter, path, resolve_path, _;

  W = require('when');

  path = require('path');

  glob = require('glob');

  _ = require('lodash');

  exports.load = function(name, custom_path) {
    var adapter, compiler, cpath, err, lib_name;
    cpath = path.join(__dirname, 'adapters', name);
    lib_name = name_to_adapter(name);
    if (!glob.sync("" + cpath + ".*").length) {
      throw new Error('compiler not supported');
    }
    if (custom_path) {
      compiler = require(custom_path);
      compiler.__accord_path = custom_path;
    } else {
      try {
        compiler = require(lib_name);
        compiler.__accord_path = resolve_path(lib_name);
      } catch (_error) {
        err = _error;
        throw new Error("'" + lib_name + "' not found. make sure it has been installed!");
      }
    }
    adapter = new (require(cpath))(compiler);
    return adapter;
  };

  exports.supports = function(name) {
    name = adapter_to_name(name);
    return !!glob.sync("" + (path.join(__dirname, 'adapters', name)) + ".*").length;
  };

  resolve_path = function(name) {
    var i, p, _i, _len, _path;
    _path = require.resolve(name).split(path.sep).reverse();
    for (i = _i = 0, _len = _path.length; _i < _len; i = ++_i) {
      p = _path[i];
      if (_path[i - 1] === name && p === 'node_modules') {
        break;
      }
    }
    return _.first(_path.reverse(), _path.length - i + 1).join(path.sep);
  };

  abstract_mapper = function(name, direction) {
    var name_maps, res;
    name_maps = [['markdown', 'marked'], ['minify-js', 'uglify-js'], ['minify-css', 'clean-css'], ['minify-html', 'html-minifier'], ['mustache', 'hogan.js'], ['scss', 'node-sass'], ['haml', 'hamljs']];
    res = null;
    name_maps.forEach(function(n) {
      if (direction === 'left' && n[0] === name) {
        res = n[1];
      }
      if (direction === 'right' && n[1] === name) {
        return res = n[0];
      }
    });
    return res || name;
  };

  name_to_adapter = function(name) {
    return abstract_mapper(name, 'left');
  };

  adapter_to_name = function(name) {
    return abstract_mapper(name, 'right');
  };

}).call(this);
